name: Container Workflow
on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/webapp:${{ github.sha }}

jobs:
    build-deploy-image:
        
        runs-on: ubuntu-latest
        
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master
          
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - run: docker build . -t ${{ env.IMAGE_NAME }}
        - run: docker push ${{ env.IMAGE_NAME }}
    
    deploy-to-aks:
      
      runs-on: ubuntu-latest
      
      if: github.ref == 'refs/heads/master'

      needs: build-deploy-image
      
      environment: PROD
      
      #env:
        #NAMESPACE: dummy
      
      steps:
      
      - uses: actions/checkout@main
      
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secret.AKS_NAME }}
          resource-group: ${{ secrets.AKS_RG }}
    
      # Create namespace if doesn't exist
      # - run: |
      #    kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ secrets.AKS_SECRET }}
          # namespace: ${{ env.NAMESPACE }}
    
      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            manifests/deployment.yml
            manifests/service.yml
          images: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}.azurecr.io/webapp:${{ github.sha }}
          imagepullsecrets: |
            ${{ secrets.AKS_SECRET }}
          #namespace: ${{ env.NAMESPACE }}

